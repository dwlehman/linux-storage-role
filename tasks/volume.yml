---

# TODO: Argument validation.
#
# TODO: Set defaults as needed: lvm_vg, device_name, disks
#

- debug:
    var: volume

- debug:
    var: pool.name

#
# Resolve specified disks to device node paths.
#
- name: Resolve disks
  resolve_blockdev:
    spec: "{{ item }}"
  with_items: "{{ volume.disks }}"
  register: resolved_disks

- debug:
    var: resolved_disks

- name: set list of resolved disk paths
  set_fact:
    volume_disks: "{{ resolved_disks.results|map(attribute='device')|list }}"

- name: Show disks
  debug:
    var: volume_disks

#
# Set the path for the final device based on device type.
#
- name: set final device path for whole disk
  set_fact:
    device_path: "{{ volume_disks[0] }}"
  when: type == "disk"

- name: set final device path for lv
  set_fact:
    device_path: "/dev/mapper/{{ pool_name }}-{{ name }}"
  when: type == "lvm"

- debug:
    var: device_path


- name: Remove the Specified Volume
  #include_tasks: "{{ layer }}-{{ storage_backend }}.yml"
  debug:
    var: layer
  loop: "{{ volume_layers[::-1] }}"
  loop_control:
    loop_var: layer
  when: state == "absent"

- name: parse the specified size
  bsize:
    size: "{{ volume.size }}"
  register: size
  when: type != "disk" and state == "present" and volume.size is defined

- name: Configure the Specified Volume
  #include_tasks: "{{ layer }}-{{ storage_backend }}.yml"
  debug:
    var: layer
  loop: "{{ volume_layers }}"
  loop_control:
    loop_var: layer
  when: state == "present"

#
# Update facts since we may have changed system state.
#
# Should this be in a handler instead?
#
- name: Update facts
  setup:
  when: not ansible_check_mode
