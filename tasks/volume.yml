---

# TODO: Argument validation.
#
# TODO: Set defaults as needed: lvm_vg, device_name, disks
#
- set_fact:
    volume: "{{ volume_defaults|combine(raw_volume) }}"

- debug:
    var: volume

#
# Resolve specified disks to device node paths.
#
- name: Resolve disks
  resolve_blockdev:
    spec: "{{ item }}"
  with_items: "{{ volume.disks }}"
  register: resolved_disks
  when: volume.disks is defined and volume.type != "lvm"

- debug:
    var: resolved_disks
  when: volume.type != "lvm" and volume.disks is defined

- name: set list of resolved disk paths
  set_fact:
    disks: "{{ resolved_disks.results|map(attribute='device')|list }}"
  when: volume.type != "lvm" and volume.disks is defined

- name: Show disks
  debug:
    var: disks
  when: volume.type != "lvm" and volume.disks is defined

#
# Set the path for the final device based on device type.
#
- name: set final device path for whole disk
  set_fact:
    device_path: "{{ disks[0] }}"
  when: volume.type == "disk"

- name: set final device path for partition
  set_fact:
    device_path: "{{ disks[0] }}1"
  when: volume.type == "partition"

- name: set final device path for lv
  set_fact:
    device_path: "/dev/mapper/{{ pool.name }}-{{ volume.name }}"
  when: volume.type == "lvm"

- debug:
    var: device_path

- name: stat the final device file
  include_tasks: stat_device.yml

- block:
  - name: find current fs type
    command: blkid -s TYPE -o value {{ device_path }}
    register: blkid_type
    changed_when: false
  rescue:
    - debug:
        msg: "failed to find existing fs type"
  when: device_status.stat.exists

- set_fact:
    removing: "{{ volume.state == 'absent' or (pool.state is defined and pool.state == 'absent') }}"

- name: parse the specified size
  bsize:
    size: "{{ volume.size }}"
  register: size
  when: volume.type != "disk"

- name: Manage the Specified Volume
  include_tasks: "{{ layer }}-{{ storage_backend }}.yml"
  loop: "{{ volume_layers if not removing else volume_layers[::-1] }}"
  loop_control:
    loop_var: layer
  when: volume

- debug:
    msg: "Done with {{ volume.name }}"

- set_fact:
    volume: null

#
# Update facts since we may have changed system state.
#
# Should this be in a handler instead?
#
- name: Update facts
  setup:
  when: not ansible_check_mode
