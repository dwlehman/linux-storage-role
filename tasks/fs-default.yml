---
- name: Stat the final device file
  include_tasks: stat_device.yml

- block:
  - name: Install xfsprogs for xfs file system type
    package:
      name: xfsprogs
      state: present
  - set_fact:
      installed_packages: "{{ installed_packages + ['xfsprogs'] }}"
  when: "'xfsprogs' not in installed_packages and volume.fs_type == 'xfs' and not ansible_check_mode"

- block:
  - name: Install e2fsprogs for ext file system type
    package:
      name: e2fsprogs
      state: present
  - set_fact:
      installed_packages: "{{ installed_packages + ['e2fsprogs'] }}"
  when: "'e2fsprogs' not in installed_packages and volume.fs_type in ['ext2', 'ext3', 'ext4'] and not ansible_check_mode"

- block:
  - name: Install util-linux for swap file system type
    package:
      name: util-linux
      state: present
  - set_fact:
      installed_packages: "{{ installed_packages + ['util-linux'] }}"
  when: "'util-linux' not in installed_packages and (volume.fs_type == 'swap' or volume.state == 'absent' or (pool.state is defined and pool.state == 'absent')) and not ansible_check_mode"

- name: unmount fs if we're going to reformat
  mount:
    src: "{{ volume._device }}"
    path: "{{ volume._orig_mount_point }}"
    state: unmounted
  when: volume._wipe and volume._orig_mount_point
  changed_when: false

- name: Remove file system as needed
  command: wipefs {{ volume.fs_destroy_options }} {{ volume._device }}
  when: volume._wipe or volume._remove and device_status.stat.exists and not ansible_check_mode

- name: Create filesystem as needed
  filesystem:
    dev: "{{ volume._device }}"
    fstype: "{{ volume.fs_type }}"
    opts: "{{ volume.fs_create_options }}"
  when: volume.fs_type and volume._create and device_status.stat.exists
